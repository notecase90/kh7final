create sequence alltype_seq; /*시퀀스추가*/

/*더미데이터*/
insert into alltype values(alltype_seq.nextval,'한옥','testicon');
insert into alltype values(alltype_seq.nextval,'빌라','fa fa-home fa-3x');
insert into alltype values(alltype_seq.nextval,'아파트','fa fa-building fa-3x');
commit;

/*편의시설 이름 join 하는 view*/
create or replace view Room_facility as 
select 
f.facility_room_no,
f.facility_option_no,
FO.option_name
from facility F left outer join facilityOption FO on f.facility_option_no = fo.option_no;

/*숙소종류 이름,아이콘 join 하는 view*/
create or replace view Room_Type as
select
rt.alltype_room_no,
rt.roomtype_room_no,
at.alltype_name,
at.alltype_icon
from roomType RT left outer join alltype AT on RT.alltype_room_no = AT.alltype_no;

/*review_detail_view 뷰*/
create view detail_view as   
select  
     member_no , member_name,
     review_no, review_room_no, review_content, review_member, review_date, review_star,
     room_no, room_name
from review 
inner join member
    on review_member = member_no
inner join room
    on review_room_no = room_no;

/*detail 페이지 가격 view*/
create view room_price as
select
    room_no, room_name,
    roomPrice_no, room_origin, day_price
from room
    inner join roomPrice on room_no = room_origin;
select * from room_price;


/*room 테이블 insert 완료된지 안된지 구분하기위해 컬럼추가하였음*/
DROP TABLE "ROOM" CASCADE CONSTRAINTS;
-- 숙소 테이블
CREATE TABLE room (
	room_no	number(19)	primary key,
	room_host_no	references host(host_no) on delete cascade,
	room_name	varchar2(300)	NOT NULL,
	room_intro	varchar2(3000)	NOT NULL,
	room_add	varchar2(300)	NOT NULL,
	room_capa	number(10)	NOT NULL,
	room_in		varchar2(30)	NOT NULL, -- 체크인
	room_out	varchar2(30)	NOT NULL, -- 체크아웃
    room_insert_complete number(10) not null --insert완료여부
);


예약 테이블
DROP TABLE "RESERVATION" CASCADE CONSTRAINTS;
CREATE TABLE reservation ( 
	reservation_no	number(19)	primary key,
	reservation_member_no references member(member_no) on delete cascade,
	reservation_room_no	 references room(room_no) on delete cascade,
	reservation_state	varchar2(50)	NOT NULL,
	reservation_date	date default sysdate NOT NULL,
	reservation_checkIn	date	NOT NULL,
	reservation_checkOut	 date	NOT NULL,
    reservation_guest number(19) not null,
    reservation_total_amount number(19) not null
);
create sequence reservation_seq;

--결제테이블
create TABLE payment (
    payment_reservation_no number(19) primary key,
    payment_member_no references member(member_no) on delete set null,
    payment_tid varchar2(4000) not null,
    payment_status varchar2(30) not null,
    payment_time date default sysdate not null
);

--예약+숙소정보 조회용 view  (reservationVO)
create or replace view reservationDetail as
select
rs.reservation_no,
rs.reservation_member_no,
rs.reservation_date,
rs.reservation_checkin,
rs.reservation_checkout,
rs.reservation_guest,
rs.reservation_total_amount,
r.room_host_no,
r.room_name,
r.room_intro,
r.room_add,
r.room_capa,
r.room_in,
r.room_out
from
RESERVATION RS
left outer join Room R on r.room_no = rs.reservation_room_no;

--결제+위의 view 정보 조회용 view (paymentVO)
create or replace view paymentDetail as
select
p.payment_reservation_no,
p.payment_status,
p.payment_time,
m.member_id,
m.member_name,
r.reservation_checkin,
r.reservation_checkout,
r.reservation_guest,
r.reservation_total_amount,
rd.room_name,
rd.room_host_no
from
PAYMENT P 
left outer join MEMBER M on P.payment_member_no = M.member_no
left outer join RESERVATION R on R.reservation_no = P.payment_reservation_no
left outer join RESERVATIONDETAIL RD on rd.reservation_no = p.payment_reservation_no
where payment_status = '승인';
