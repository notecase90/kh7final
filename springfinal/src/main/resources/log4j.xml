<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	Log4J 설정파일
	- 이 파일을 통하여 애플리케이션 내에서 사용할 Log4J 로깅 설정을 수행할 수 있다.
	
	[1] Log4J의 메세지 체계
	- TRACE : 프로그램 내에서 발생하는 모든 사소한 작업에 대한 기록
	- DEBUG : 개발 단계에서 확인해야할 정보에 대한 기록
	- INFO : 사용자에게 알려줄 정보에 대한 기록
	- WARN : 실행은 되지만 문제가 생기거나 생길 소지가 있는 상황에 대한 기록
	- ERROR : 실행이 중단되거나 예외가 발생한 상황에 대한 기록
	- FATAL : 시스템 운영에 치명적인 오류에 대한 기록(임의 기록 불가)
	
	[2] 메세지 출력 수준 설정
	- 설정한 수준보다 중요한 메세지만 출력되도록 설정이 가능
	- ex : WARN 으로 설정한 경우 WARN과 그보다 중요한 ERROR, FATAL이 출력
	- 개발단계에서는 DEBUG, 배포단계에서는 INFO 등으로 설정이 가능
	
	[3] 사용 가능한 도구와 역할
	- appender : 로깅을 수행할 대상을 설정하는 도구(콘솔,파일,이메일,...)
	- logger : 로깅을 수행하기 위한 적용범위와 메세지 수준을 설정
	- root : 전체적인 logger 설정을 수행(logger를 제외한 나머지에 대한 설정)
	
	[4] 사용 가능한 Appender
	- ConsoleAppender : 콘솔에 로그를 출력하는 도구
		- target : 출력 대상
		- layout : 출력 형식
	- FileAppender : 파일에 로그를 출력하는 도구
		- file : 대상 파일에 대한 경로 설정
		- append : 덮어쓰기(false), 붙여쓰기(true)에 대한 설정
	- DailyRollingFileAppender : 일자별로 로그를 생성하는 도구
		- DatePattern : 날짜 형식을 어떻게 첨부할지 패턴 작성
		
	[5] 레이아웃 패턴
	
	- %p : 메세지 레벨(priority)
		- %-5p : %와 p 사이에 숫자가 들어가면 차지할 자리수를 의미. 부호는 정렬방향을 의미.
	- %c : 카테고리 정보(category). 로깅이 실행된 대상의 정보
		- %c{2} : 클래스 포함 2단계까지의 경로만 보겠다는 의미
	- %m : 메세지 정보(Message). 실제 로깅에서 출력한 메세지
	- %n : 개행(Newline). 줄바꿈
	- %d : 시간 정보(date). 
		- %d{형식} : 해당 형식에 맞는 시간을 표시(SimpleDateFormat을 그대로 사용 가능)
 -->

<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- ConsoleAppender : 콘솔에 출력하는 도구 -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p - %m (%d{yyyy-MM-dd HH:mm:ss}) : %c %n" />
		</layout>
	</appender>
	
	<!-- FileAppender : 파일에 출력하는 도구 -->
	<appender name="fout" class="org.apache.log4j.FileAppender">
		<param name="file" value="D:/log/report.txt"></param>
		<param name="append" value="true"></param>
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p - %m (%d{yyyy-MM-dd HH:mm:ss}) : %c %n" />
		</layout>
	</appender>
	
	<!-- DailyRollingFileAppender : 일자별로 파일을 생성하여 출력하는 도구 -->
	<appender name="daily" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="file" value="D:/log/daily"></param>
		<param name="append" value="true"></param>
		
		<param name="DatePattern" value="'.'yyyy-MM-dd'.log'"></param>
		
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p - %m (%d{yyyy-MM-dd HH:mm:ss}) : %c %n" />
		</layout>
	</appender>
	
	<root>
		<priority value="debug" />
		<appender-ref ref="console" />
	</root>
	
</log4j:configuration>