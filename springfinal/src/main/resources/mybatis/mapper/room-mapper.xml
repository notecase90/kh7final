<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	매퍼 파일은 SQL 구문을 보관하는 파일을 말하며 일반적으로 "테이블당 1개" 만든다.
	- namespace : 여러 개의 매퍼 중에 현재 매퍼를 식별하도록 지어주는 고유한 명칭(필수)
 -->
<mapper namespace="room">
	
	<!-- 
		구문 생성 : 종류에 맞는 구문을 해당 태그로 작성
		- id : 외부에서 구문을 실행하기 위해 알아야 할 구문의 고유 식별값 
		- parameterType : 외부에서 전달되는 데이터의 타입
		- resultType : 조회 결과 형태(오로지 select에서만 사용가능)
			- 목록이나 단일항목 모두 DTO로 취급한다
			
		mybatis에는 2종류의 바인딩이 존재
		1. 정적 바인딩 : 있는 그대로의 데이터를 추가적인 처리 없이 구문에 할당(항목)	
			사용법 : ${데이터}
		2. 동적 바인딩 : 데이터를 형태에 맞게 해석하여 따옴표 등을 처리한 뒤 구문에 할당(데이터)
			사용법 : #{데이터}
	 -->
	<!-- 시퀀스 알아오기 -->
	<select id="sequence" resultType="int">
		select room_seq.nextval from dual
	</select>
	<!-- 숙소 등록 -->
	<insert id="insert" parameterType="RoomDto">
		insert into room values(
			#{roomNo}, #{roomHostNo}, #{roomName}, #{roomIntro}, #{roomAdd},
			#{roomCapa}, #{roomIn}, #{roomOut}, #{roomInsertComplete}
		)
	</insert>
	
	<!-- 숙소 등록-편의시설등록 -->
	<insert id="insert2" parameterType="FacilityDto">
		<foreach collection="optionNo" item="optionNo" open="insert all" close="select * from dual" separator=" ">
			into facility values(
			#{roomNo}, #{optionNo}
			)
		</foreach>
	</insert>
	
	<!-- 숙소등록-내부시설등록 -->
	<insert id="insert3" parameterType="InFacilityDto">
		insert into INFACILITY values(
			#{inFacilityRoomNo}, #{bedCount}, #{bathCount}, #{balconyCount}
		)
	</insert>
	
	<!-- 숙소등록-숙소종류등록 -->
	<insert id="insert4" parameterType="RoomTypeDto">
		insert into roomType values (
			#{roomTypeRoomNo}, #{allTypeNo}
		)
	</insert>
	
	<!-- 숙소등록-가격등록 -->
	<insert id="insert5" parameterType="RoomPriceDto">
		insert into roomPrice values(
			roomPrice_seq.nextval, #{roomOrigin}, #{dayPrice}
		)
	</insert>
	
	<update id="insertSuccess" parameterType="RoomDto">
		update room set room_insert_complete = #{roomInsertComplete} where room_no = #{roomNo}
	</update>
	
	<!-- 목록 -->
	<select id="list" resultType="RoomVo">
		select * from listDetail where room_insert_complete = 1
	</select>
	
	<!-- 상세보기 -->
	<select id="detail" resultType="RoomDto" parameterType="int">
		select * from room where room_no = #{roomNo}
	</select>
	
	<!-- 삭제 -->
		<delete id="delete" parameterType="int">
			delete room where room_no = #{roomNo}
		</delete>
		
	<!-- 수정 -->
		<update id="edit" parameterType="RoomDto">
			update room  
			set 
			room_name = #{roomName},
			room_intro = #{roomIntro},
			room_add = #{roomAdd},
			room_capa = #{roomCapa},
			room_in = #{roomIn},
			room_out = #{roomOut}
			where 
			room_no = #{roomNo} and
			room_host_no = #{roomHostNo}
		</update>
	
	<!-- 편의시설 옵션 불러오기 -->
	<select id="facility" resultType="FacilityOptionDto">
		select * from facilityOption
	</select>
	<!-- 전체숙소종류 불러오기 -->
	<select id="allType" resultType="AlltypeDto">
		select * from allType
	</select>
	
	
<!-- 	<insert id="?"> -->
<!-- 		insert all  -->
<!-- 			into 테이블명(형식) values(데이터) -->
<!-- 			into 테이블명(형식) values(데이터) -->
<!-- 			into 테이블명(형식) values(데이터) -->
<!-- 			into 테이블명(형식) values(데이터) -->
<!-- 			into 테이블명(형식) values(데이터) -->
<!-- 			into 테이블명(형식) values(데이터) -->
<!-- 		select * from dual -->
<!-- 	</insert> -->
	
	<!-- 디테일페이지에서 편의시설 불러오기 (DB view추가해야함)-->
	<select id="facilityDetail" resultType="FacilityVO" parameterType="int">
		select * from room_facility where facility_room_no = #{roomNo}
	</select>
	
	<!-- 디테일페이지에서 내부시설 불러오기 -->
	<select id="infacilityDetail" resultType="InFacilityDto" parameterType="int">
		select * from INFACILITY where infacility_room_no = #{inFacilityRoomNo}
	</select>
	
	<!-- 디테일페이지에서 숙소종류 불러오기 (DB view추가해야함)-->
	<select id="roomTypeDetail" resultType="RoomTypeVO" parameterType="int">
		select * from room_type where roomType_room_no = #{roomNo}
	</select>
	
	<!-- 디테일페이지에서 숙소가격 불러오기 -->
	<select id="roomPriceDetail" resultType="roomPriceDto" parameterType="int">
		select * from ROOMPRICE where room_origin = #{roomOrigin}
	</select>
	
	<!-- 디테일페이지에서 해당숙소 리뷰 불러오기 (DB view추가해야함) -->
	<select id="onelist" parameterType="int" resultType="reviewVo">
		select * from review_view
		where review_room_no = #{reviewRoomNo} 
	</select>
	
	<!-- 디테일페이지에서 호스트정보 불러오기 -->
	<select id="hostInfo" resultType="hostVo" parameterType="int">
		select * from host_info where room_no = #{roomNo}
	</select>

	<!-- 파일업로드 -->
	<!-- roomPicNo생성 -->
	<select id="picSequence" resultType="int">
		select room_pic_seq.nextval from dual
	</select>
	
	<!-- 디테일페이지에서 이미지 다운로드하기 -->
	<select id="preview" parameterType="int" resultType="RoomPicDto">
		select * from room_pic where room_origin_no = #{roomOriginNo}
	</select>
	
	<!-- 사진등록 -->
	<insert id="addPic" parameterType="RoomPicDto">
		insert into room_pic(
			room_pic_no,
			room_origin_no,
			room_pic_upload_name,
			room_pic_save_name,
			room_pic_content_type,
			room_pic_file_size
		)
		values(
			#{roomPicNo},
			#{roomOriginNo},
			#{roomPicUploadName},
			#{roomPicSaveName},
			#{roomPicContentType},
			#{roomPicFileSize}
		)		
	</insert>
	
	<!-- 사진파일 다운로드 -->
	<select id="getPic" resultType="RoomPicDto" parameterType="int">
		select * from ROOM_PIC where room_pic_no = #{roomPicNo}
	</select>
	
	<select id="count" resultType="int">
		select count(*) from room
	</select>
	
	<select id="getListWithPaging" resultType="RoomVo">
		<![CDATA[
          select
              room_no,room_name, room_add
          from
              (
                  select 
                      rownum rn, room_no,room_name, room_add
                  from
                      room
                  where rownum <= #{pageNum} * #{amount}
              )
          where rn > (#{pageNum}-1) * #{amount}
    ]]>
	</select>
	
</mapper> 
