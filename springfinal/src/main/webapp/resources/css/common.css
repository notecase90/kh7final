@charset "UTF-8";

html, body{
	height: 100%;
	margin: 0;
	padding: 0;
}


/* 
	선택자(selector) : 디자인을 적용시킬 대상을 선택하기 위한 문법 
	
	태그 선택자 : 태그명을 이용하여 페이지 내의 모든 대상을 선택하는 방법(매우 위험)
	상태 선택자 : 대상을 특정하기 위해 상태를 이용하여 선택하는 방법
		ex) h1:first-child , h1:last-child , h1:nth-child(1), h1:hover, h1:focus 등
	속성 선택자 : 태그의 속성을 이용하여 선택하는 방법
		ex) h1[id=target] , input[name=memberId], 등
	아이디 선택자 : 
		- 모든 태그에는 id라는 속성을 부여할 수 있으며, id는 페이지 내에서 유일해야 한다.
		- 페이지 내에서 딱 하나만 선택하고 싶을 때 사용
		ex) h1#target , #target , 등
	클래스 선택자 : 
		- 모든 태그에는 class라는 속성을 부여할 수 있으며, 중복하여 부여가 가능하고, 여러 개 부여 가능
		- 페이지 내에서 원하는 그룹을 만들어 선택하고 싶을 때 사용
		- 태그의 종류가 달라도 묶어서 디자인을 적용할 수 있다.
		ex) h1[class=test], h1.test , .test , 등
	연계 선택자 : 
		- 특정 태그를 기준으로 하여 경로를 탐색하여 태그를 선택하는 방법
*/

/*
	디자인을 1개의 태그에 적용시키는 훈련보다는 레이아웃을 구현하는 요령에 대해서 고민해본다!
	
	대원칙
	1. 기본 글꼴을 설정한다
	2. box-sizing을 설정한다
		- box-sizing 속성은 "폭 설정 시 적용될 범위"를 지정하는 속성
		- box-sizing:content-box; 로 설정하면 width 가 내용물을 기준으로 설정
		- box-sizing:border-box; 로 설정하면 width 가 테두리를 기준으로 설정
*/
* {
	font-family: Neo Sans Pro, sans-serif;
	box-sizing: border-box;
}

/*
	바깥 영역 생성 규칙
	- 영역은 100px부터 1500px까지 100px 간격으로 설정할 수 있다.
	- container-100 과 같은 형태의 클래스 모양으로 디자인한다.
*/
.container-100 {
	width: 100px;
}

.container-200 {
	width: 200px;
}

.container-300 {
	width: 300px;
}

.container-400 {
	width: 400px;
}

.container-500 {
	width: 500px;
}

.container-600 {
	width: 600px;
}

.container-700 {
	width: 700px;
}

.container-800 {
	width: 800px;
}

.container-900 {
	width: 900px;
}

.container-1000 {
	width: 1000px;
}

.container-1100 {
	width: 1100px;
}

.container-1200 {
	width: 1200px;
}

.container-1300 {
	width: 1300px;
}

.container-1400 {
	width: 1400px;
}

.container-1500 {
	width: 1500px;
}

/*
	바깥 영역의 정렬 규칙
	- 영역은 원한다면 좌, 우, 가운데 위치할 수 있어야 한다.
	- 기본적으로 가운데 위치하게 만들고 원한다면 왼쪽 좌, 우 위치가 가능하도록 스타일을 미리 구현
*/
.container-100, .container-200, .container-300, .container-400,
	.container-500, .container-600, .container-700, .container-800,
	.container-900, .container-1000, .container-1100, .container-1200,
	.container-1300, .container-1400, .container-1500 {
	margin-left: auto;
	margin-right: auto;
}

.container-left {
	margin-left: 0px;
	margin-right: auto;
}

.container-center {
	margin-left: auto;
	margin-right: auto;
}

.container-right {
	margin-left: auto;
	margin-right: 0px;
}

/*
	영역 내부에 줄을 배치하여 원하는 도구들을 위치시키도록 구현
*/
.row {
	width: 100%;
	margin-top: 20px;
	margin-bottom: 20px;
}

/*
	내용물 정렬 규칙
*/
.text-left {
	text-align: left;
}

.text-right {
	text-align: right;
}

.text-center {
	text-align: center;
}

/*
	이미지 스타일링
	공용 스타일
	- .image
	확장 스타일
	- .image-circle : 이미지를 원형으로 표시
	- .image-frame : 이미지에 액자처럼 테두리 표시
	- .image-shadow : 이미지에 그림자를 표시
	- .image-blur : 이미지를 뿌옇게 표시(단, 마우스가 올라가면 선명하게 표시)
	- .image-leaf : 이미지를 나뭇잎 모양으로 표시
*/
.image {
	
}

.image.image-circle {
	border-radius: 50%;
}

.image.image-frame {
	border: 2px solid gray;
}

.image.image-shadow {
	/* box-shadow : X위치 Y위치 번짐정도 퍼짐정도 색상; */
	box-shadow: 0px 0px 4px 4px gray;
}

.image.image-blur {
	/* opacity가 1이면 선명 , 0이면 투명 */
	opacity: 0.5;
}
/* class="image-blur" 인 항목에 마우스가 올라가면(hover) : 상태선택자 */
.image.image-blur:hover {
	opacity: 1;
}

.image.image-leaf {
	border-top-left-radius: 50%;
	border-bottom-right-radius: 50%;
}

/*
	테이블 스타일링
	
	- 공용 스타일 : 
		- .table : 폭 100% , 내부 여백 설정
		
	- 확장 스타일 : 
		- .table-border : 테이블에 테두리 추가
		- .table-hover : 마우스가 올라가 있는 줄에 배경색을 강조하는 효과를 부여
		- .table-striped : 테이블에 2줄마다 배경색을 강조하는 효과를 부여(줄무늬 효과)
*/
.table {
	width: 100%;
	table-layout: fixed;
	word-break: break-all;
	text-align: center;
}

.table>thead>tr>th, .table>thead>tr>td, .table>tbody>tr>th, .table>tbody>tr>td,
	.table>tfoot>tr>th, .table>tfoot>tr>td {
	padding: 1rem;
	height: 51px;
}

.table.table-border {
	border-top: 2px solid #666;
	border-bottom: 1px solid #666;
	border-collapse: collapse;
}

.table.table-border>thead>tr>th, .table.table-border>thead>tr>td, .table.table-border>tbody>tr>th,
	.table.table-border>tbody>tr>td, .table.table-border>tfoot>tr>th,
	.table.table-border>tfoot>tr>td {
	border-top: 1px solid #e2e2e2;
	border-bottom: 1px solid #e2e2e2;
}
.select-form {
	height:36px;
}

/*
	입력창 스타일링
	
	- 공용 스타일
		- .form-input : 입력창. 폭 100% , 내부 여백 설정
		- .form-btn : 입력버튼. 폭 100% , 내부 여백 설정
		
	- 확장 스타일
		- .form-input-underline : 밑줄만 존재하는 입력창
		- .form-input-inline : 한 줄에 여러 개 배치할 수 있도록 폭이 자동 설정되는 입력창
		
		- .form-btn-inline : 한 줄에 여러 개 배치할 수 있도록 폭이 자동 설정되는 버튼
		- .form-btn-positive : 긍정 버튼
		- .form-btn-negative : 부정 버튼
		- .form-btn-normal : 일반 버튼
		
	(주의) textarea는 가로 크기 변경이 되면 디자인이 망가진다(세로 허용 또는 전면 금지)
*/
.form-input, .form-btn {
	width: 100%;
	padding: 0.5rem;
	outline: none;
}

.form-input.form-input-underline {
	border: none;
	border-bottom: 2px solid lightgray;
}

.form-input.form-input-underline:focus {
	border-bottom-color: black;
}

.form-input.form-input-inline, .form-btn.form-btn-inline {
	width: auto;
}

textarea.form-input {
	resize: vertical;
	min-height: 150px; /*수치는 자유롭게 설정*/
	height: 150px; /*수치는 자유롭게 설정*/
	max-height: 500px; /*수치는 자유롭게 설정*/
}

.form-btn {
	border: none;
	background-color: rgb(36, 106, 127);
	color: white;
}

.form-btn.form-btn-normal {
	background-color: white;
	color: gray;
	border: 1px solid gray;
}

.form-btn.form-btn-positive {
	background-color: rgb(46, 163, 79);
	color: white;
}

.form-btn.form-btn-negative {
	background-color: rgb(202, 36, 49);
	color: white;
}

/*
	Pagination 스타일
*/
.pagination>a {
	color: grey;
	text-decoration: none;
	display: inline-block;
	min-width: 35px;
	border: 1px solid transparent;
	padding: 0.5rem;
	text-align: center;
	cursor: pointer;
}

.pagination>a:hover, .pagination>a.on {
	border: 1px solid lightgray;
	background-color: rgb(36, 106, 127);
	color: white;
}

.pagination-list {
	list-style: none;
	margin: 0px;
	padding: 0px;
}

.pagination-list>li {
	display: inline-block;
	min-width: 35px;
	border: 1px solid transparent;
	padding: 0.5rem;
	text-align: center;
	cursor: pointer;
}

.pagination-list>li>a {
	color: gray;
	text-decoration: none;
}

.pagination-list>li:hover, .pagination-list>li.on {
	border: 1px solid lightgray;
}

.pagination-list>li:hover>a, .pagination-list>li.on>a {
	background-color: rgb(36, 106, 127);
	color: white;
}

/*
	float 스타일(다단 레이아웃)
	가상선택자(Virtual Selector)
	- 존재하지 않는 영역을 만들어서 사용할 수 있도록 지원하는 선택자
	- ::before 는 해당 영역의 시작지점을 말한다
	- ::after는 해당 영역의 종료지점을 말한다
	
	1. 존재하지 않는 영역이므로 존재하도록 만드는 것이 첫 번째로 수행해야 하는 작업
		- content : 영역에 글자를 작성할 수 있다.
	2. display를 block으로 설정해서 한 줄을 차지하도록 설정
	3. 영역이 한 줄에 걸쳐서 생성되었으므로, 해당 영역에 clear 설정
*/
.float-container::after {
	content: "";
	display: block;
	clear: both;
}

.float-container>.left {
	float: left;
}

.float-container>.right {
	float: right;
}

/*
	링크 태그를 버튼처럼 보이게 변경
*/
.link-btn {
	display: inline-block;
	padding: 0.75rem;
	border: none;
	text-decoration: none;
	background-color: rgb(36, 106, 127);
	color: white;
}

.link-btn:hover {
	border-color: black;
	color: white;
}

/* 
	오류 메세지 스타일
*/
.error {
	color: red;
}

pre {
	white-space: pre-wrap;
	word-break: break-all;

	/* 말 줄임표 스타일 설정 */
	/*
	overflow:hidden;
	white-space:nowrap;
	text-overflow:ellipsis;
*/
}

/*bookSearchForm inline설정 */
.bookSearchForm {
	display: inline;
}
